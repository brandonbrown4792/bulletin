{"version":3,"sources":["services/apiRoot.js","Components/Navigation/Header.js","Components/Navigation/InterestsNewsSourcesMenu.js","Components/Navigation/Menu.js","Components/Posts/NewPostForm.js","Helpers/formatDate.js","Components/Comments/Comment.js","Containers/Comments/CommentsList.js","Components/Comments/NewCommentForm.js","Containers/Comments/CommentsContainer.js","Components/Posts/RegularUserPost.js","Components/Posts/SharePostModal.js","Components/Posts/PostFooter.js","Components/Posts/NewsPost.js","Components/Posts/SharedUserPost.js","Components/Posts/UserPost.js","Containers/Posts/PostsList.js","Containers/Main Containers/HomeContainer.js","Components/Tags/TagSearchForm.js","Containers/Main Containers/TagsContainer.js","Components/Conversations/Conversation.js","Containers/Conversations/ConversationsList.js","Components/Conversations/NewConversationForm.js","Components/Conversations/NewConversationFooter.js","Containers/Main Containers/ConversationsContainer.js","Components/Notifications/GeneralNotification.js","Components/Notifications/FollowRequestNofication.js","Containers/Main Containers/NotificationsContainer.js","Components/User Page/UserPageRedirect.js","Components/User Page/UserHeader.js","Containers/Main Containers/UserPageContainer.js","Components/Account/LoginForm.js","Components/Account/SignupAccountForm.js","Components/Account/SignupSource.js","Components/Account/SignupInterest.js","Components/Account/SignupInterestsSourcesForm.js","Containers/Account/SignupFormsContainer.js","Components/Account/UpdateAccountForm.js","Containers/Main Containers/UpdateProfileContainer.js","Containers/Main Containers/InterestContainer.js","Containers/Main Containers/NewsSourcesContainer.js","Containers/Main Containers/MainContainer.js","Components/SearchUser/SearchUsersForm.js","Components/SearchUser/SearchUsersList.js","Containers/SearchUser/SearchUsersContainer.js","Components/App.js","serviceWorker.js","store.js","Reducers/badgesReducer.js","Reducers/loggedInReducer.js","Reducers/conversationsReducer.js","Reducers/interestsReducer.js","Reducers/menuReducer.js","Reducers/newsSourcesReducer.js","Reducers/notificationsReducer.js","Reducers/postsReducer.js","Reducers/searchedUsersReducer.js","Reducers/signupReducer.js","Reducers/userReducer.js","index.js"],"names":["API_ROOT","Header","state","anchorEl","username","getUsername","token","localStorage","getItem","fetchObj","method","headers","fetch","then","res","json","usernameResponse","setState","handleLogout","handleClose","removeItem","props","setLoggedIn","history","push","go","handleEditProfile","handleLogin","handleSignup","handleMenu","event","currentTarget","renderMenuItems","className","MenuItem","onClick","key","this","AppBar","elevation","position","style","background","Toolbar","Typography","variant","marginLeft","marginTop","flexGrow","IconButton","marginRight","color","AccountCircle","paddingRight","id","open","Boolean","onClose","React","Component","withRouter","connect","dispatch","value","type","loggedIn","InterestsNewsSourcesMenu","interestsOpen","newsSourcesOpen","fetchInterestsAndNewsSources","iNResponse","message","setInterestsAndNewsSources","interests","news_sources","handleInterestsClick","handleNewsSourcesClick","mapInterests","map","interest","ListItem","button","name","paddingLeft","slugify","ListItemText","primary","mapNewsSources","newsSources","newsSource","string","split","join","toLowerCase","List","length","Fragment","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","menuReducer","Menu","getBadgeCounts","badgesResponse","getBadges","notifications","messages","handleClick","e","target","textContent","width","maxHeight","overflowY","ListItemIcon","HomeOutlined","LocalOfferOutlined","MessageOutlined","messagesCount","NotificationsOutlined","notificationsCount","PersonOutlined","loggedInReducer","badgesReducer","createNewPost","post","onSubmit","preventDefault","content","tags","filter","word","tag","slice","postObj","body","JSON","stringify","alert","catch","reset","handleNewPost","placeholder","inputDate","date","Date","parse","timeFormat","Intl","DateTimeFormat","hour","minute","format","dateFormat","month","day","year","comment","user","formatDate","created_at","CommentsList","comments","mapComments","NewCommentForm","commentObj","updatePosts","error","handleNewComment","isSharedPost","Modal","sharedPostObj","shared_post","sharedPostResponse","sharePost","is_news_story","renderSharedPost","PostFooter","useState","commentDrawerOpen","setCommentDrawer","modalOpen","setModalOpen","Button","postResponse","likePost","Icon","ThumbUpOutlined","likes_count","ChatOutlined","float","ShareOutlined","NewsPost","window","news_url","news_source","news_title","news_image","src","alt","news_author","UserPost","renderPost","PostsList","posts","i","mapPosts","HomeContainer","fetchPosts","getPosts","handleScroll","scrollPosition","document","scrollTop","documentElement","querySelector","display","scrollToTop","addEventListener","removeEventListener","isLoggedIn","postsReducer","tagsObj","names","handleTagSearch","TagsContainer","Conversation","loadConversation","conversation","openConversation","setOpenConversation","cursor","unread_messages_count","participants","participant","getLastMessage","ConversationsList","conversations","mapConversations","addUserToParticipants","setSearchedParticipants","setParticipants","addConversation","searchedParticipants","userObj","searchedUsers","handleSearch","mapSearchedParticipants","conversationObj","participant_usernames","conversationResponse","setNewConversationDrawer","handleNewConversation","NewConversationFooter","newConversationDrawer","ConversationsContainer","fetchConversations","conversationData","getConversations","deleteMessages","forEach","addUserMessage","addResponseMessage","markAllAsRead","setMessagesRead","toggleWidget","udpateConversation","setMessagesBadgeCount","getCustomLauncher","handleToggle","handleChatClose","handleNewUserMessage","messageObj","conversation_id","messageResponse","addMessageToConversation","title","subtitle","showCloseButton","showTimeStamp","launcher","senderPlaceHolder","conversationsReducer","conversationId","Notification","notification_type","deleteNotification","notification_content","acceptObj","follow_request","follower","acceptResponse","handleAccept","denyObj","denyResponse","handleDeny","NotificationsContainer","fetchNotifications","getNotifications","setNotificationsRead","mapNotifications","notification","GeneralNotification","notificationsReducer","redirect","UserHeader","handleFollowRequest","followObj","followed","match","params","followResponse","updateFollow","result","response","Grid","container","item","xs","bio","posts_count","followers_count","following_count","following","userReducer","UserPageContainer","getUserInfo","console","log","getUser","renderUser","userPopulated","Object","keys","username_email","password","loginResponse","setItem","autoComplete","email","password_confirmation","passwordConfirmation","is_private","isPrivate","checked","signupResponse","setPickInterestsSources","pickInterestsSources","FormControlLabel","control","Checkbox","label","SignupSource","handleSourceChange","source","boxShadow","border","SingupInterest","handleInterestChange","SignupInterestsSourcesForm","fetchedNewsSources","fetchedInterests","fetchSources","sources","setSources","fetchInterests","setInterests","fetchUserInterestsAndNewsSources","addInterest","addSource","mapSources","selectedSources","includes","SignupInterest","selectedInterests","removeSource","removeInterest","handleSubmit","submitSources","submitInterests","sourcesObj","ids","sourcesResponse","waitFetch","interestsObj","interestsResponse","justify","signupReducer","SignupFormsContainer","UpdateAccountForm","handleChange","updateResponse","onChange","UpdateProfileContainer","InterestsContainer","interestResponse","interestsReducer","NewsSourcesContainer","newsSourceResponse","newsSourcesReducer","MainContainer","exact","path","to","UserPageRedirect","LoginForm","searchedUsersReducer","getSearchedUsers","mapUsers","SearchUsersForm","SearchUsersList","App","SearchUsersContainer","location","hostname","rootReducer","combineReducers","action","newPosts","unshift","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d79e6e03.chunk.js","sourcesContent":["const DEV_URL = 'http://localhost:3000/api/v1';\nconst PROD_URL = 'https://bulletin-app-api.herokuapp.com/api/v1';\nexport const API_ROOT = process.env.NODE_ENV === 'development' ? DEV_URL : PROD_URL;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, Typography, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass Header extends React.Component {\n  state = {\n    anchorEl: null,\n    username: ''\n  }\n\n  componentDidMount() {\n    this.getUsername();\n  }\n\n  getUsername = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-username`, fetchObj)\n      .then(res => res.json())\n      .then(usernameResponse => {\n        if (usernameResponse.username) {\n          this.setState({ ...this.state, username: usernameResponse.username });\n        }\n      })\n  }\n\n  handleLogout = () => {\n    this.handleClose();\n    localStorage.removeItem('auth_token');\n    this.props.setLoggedIn(false);\n    this.props.history.push('/home');\n    this.props.history.go();\n  }\n\n  handleEditProfile = (props) => {\n    this.handleClose();\n    this.props.history.push('/update-profile');\n  }\n\n  handleLogin = (props) => {\n    this.handleClose();\n    this.props.history.push('/login');\n  }\n\n  handleSignup = () => {\n    this.handleClose();\n    this.props.history.push('/signup');\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleMenu = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  renderMenuItems = () => {\n    if (localStorage.getItem('auth_token')) {\n      return (\n        <div className='logged-in-menu'>\n          <MenuItem onClick={() => this.handleLogout(this.props)}>Logout</MenuItem>\n          <MenuItem onClick={() => this.handleEditProfile(this.props)}>Update Profile</MenuItem>\n        </div>\n      )\n    }\n    else {\n      return (\n        [\n          <MenuItem key='Log In' onClick={() => this.handleLogin(this.props)}>Log In</MenuItem>,\n          <MenuItem key='Sign Up' onClick={() => this.handleSignup(this.props)}>Sign Up</MenuItem>\n        ]\n      )\n    }\n  }\n\n  render() {\n    return (\n      <AppBar elevation={0} position=\"sticky\" style={{ background: 'transparent' }}>\n        <Toolbar>\n          <Typography variant=\"h3\" style={{ marginLeft: '9%', marginTop: '2%', flexGrow: 1 }}>\n            Bulletin\n          </Typography>\n          <IconButton\n            style={{ marginRight: '9%' }}\n            onClick={this.handleMenu}\n            color=\"inherit\"\n          >\n            <AccountCircle style={{ paddingRight: '10px' }} />\n            <Typography>{this.state.username}</Typography>\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={this.state.anchorEl}\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            {this.renderMenuItems(this.props)}\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedIn: (value) => dispatch({ type: 'SET_LOGGED_IN', loggedIn: value })\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Header));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { List, ListItem, ListItemText, Collapse } from '@material-ui/core';\nimport { API_ROOT } from '../../services/apiRoot';\n\n// Icons\nimport {\n  ExpandMore,\n  ExpandLess\n} from '@material-ui/icons';\n\nclass InterestsNewsSourcesMenu extends React.Component {\n  state = {\n    interestsOpen: false,\n    newsSourcesOpen: false\n  };\n\n  componentDidMount() {\n    this.fetchInterestsAndNewsSources();\n  }\n\n  fetchInterestsAndNewsSources = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return;\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-interests-and-news-sources`, fetchObj)\n      .then(res => res.json())\n      .then(iNResponse => {\n        if (!iNResponse.message) {\n          this.props.setInterestsAndNewsSources(iNResponse.interests, iNResponse.news_sources)\n        }\n      })\n  }\n\n  handleInterestsClick = () => {\n    this.setState({ interestsOpen: !this.state.interestsOpen });\n    this.setState({ newsSourcesOpen: false });\n  };\n\n  handleNewsSourcesClick = () => {\n    this.setState({ newsSourcesOpen: !this.state.newsSourcesOpen });\n    this.setState({ interestsOpen: false });\n  };\n\n  mapInterests = () => {\n    return this.props.interests.map(interest =>\n      <ListItem\n        button\n        key={interest.name}\n        style={{ paddingLeft: '30px' }}\n        onClick={() => {\n          this.props.history.push(`/interests/${this.slugify(interest.name)}`);\n          this.props.history.go();\n        }}\n      >\n        <ListItemText primary={`${interest.name}`} />\n      </ListItem>\n    )\n  }\n\n  mapNewsSources = () => {\n    return this.props.newsSources.map(newsSource =>\n      <ListItem\n        button\n        key={newsSource.name}\n        style={{ paddingLeft: '30px' }}\n        onClick={() => {\n          this.props.history.push(`/news-sources/${this.slugify(newsSource.name)}`);\n          this.props.history.go();\n        }}\n      >\n        <ListItemText primary={`${newsSource.name}`} />\n      </ListItem >\n    )\n  }\n\n  slugify = (string) => string.split(' ').join('-').toLowerCase();\n\n  render() {\n    return (\n      <List>\n        {this.props.interests.length > 0 &&\n          <React.Fragment>\n            <ListItem button onClick={this.handleInterestsClick}>\n              <ListItemText primary=\"Interests\" />\n              {this.state.interestsOpen ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.interestsOpen} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {this.mapInterests()}\n              </List>\n            </Collapse>\n          </React.Fragment>\n        }\n        {this.props.newsSources.length > 0 &&\n          <React.Fragment>\n            <ListItem button onClick={this.handleNewsSourcesClick}>\n              <ListItemText primary=\"News Sources\" />\n              {this.state.newsSourcesOpen ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.newsSourcesOpen} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {this.mapNewsSources()}\n              </List>\n            </Collapse>\n          </React.Fragment>\n        }\n      </List>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    interests: state.menuReducer.interests,\n    newsSources: state.menuReducer.newsSources\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setInterestsAndNewsSources: (interests, newsSources) =>\n      dispatch({ type: 'SET_INTERESTS_AND_NEWS_SOURCES', interests: interests, newsSources: newsSources })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InterestsNewsSourcesMenu));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport InterestsNewsSourcesMenu from './InterestsNewsSourcesMenu';\nimport { API_ROOT } from '../../services/apiRoot';\n\n// Icons\nimport {\n  HomeOutlined,\n  LocalOfferOutlined,\n  MessageOutlined,\n  NotificationsOutlined,\n  PersonOutlined\n} from '@material-ui/icons';\n\nclass Menu extends React.Component {\n  componentDidMount() {\n    this.getBadgeCounts();\n  }\n\n  getBadgeCounts = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return;\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-badges`, fetchObj)\n      .then(res => res.json())\n      .then(badgesResponse => {\n        if (!badgesResponse.message) {\n          this.props.getBadges(badgesResponse.notifications, badgesResponse.messages)\n        }\n      })\n  }\n\n  handleClick = (e) => {\n    this.props.history.push(`/${e.target.textContent.toLowerCase()}`)\n  }\n\n  render() {\n    return (\n      <div className='menu-container'>\n        <List className='hidden-scroll' component=\"nav\" style={{ position: 'fixed', width: '20%', maxHeight: '80vh', overflowY: 'scroll' }}>\n          <ListItem button onClick={e => this.handleClick(e)}>\n            <ListItemIcon>\n              <HomeOutlined style={{ color: '#FDFFFF' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n          <ListItem button onClick={e => this.handleClick(e)}>\n            <ListItemIcon>\n              <LocalOfferOutlined style={{ color: '#FDFFFF' }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Tags\" />\n          </ListItem>\n          {this.props.loggedIn && (\n            <React.Fragment>\n              <ListItem button onClick={e => this.handleClick(e)}>\n                <ListItemIcon>\n                  <MessageOutlined style={{ color: '#FDFFFF' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Messages\" />\n                {this.props.messagesCount > 0 && <div className='notification-badge'>{this.props.messagesCount}</div>}\n              </ListItem>\n              <ListItem button onClick={e => this.handleClick(e)}>\n                <ListItemIcon>\n                  <NotificationsOutlined style={{ color: '#FDFFFF' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Notifications\" />\n                {this.props.notificationsCount > 0 && <div className='notification-badge'>{this.props.notificationsCount}</div>}\n              </ListItem>\n              <ListItem button onClick={e => this.handleClick(e)}>\n                <ListItemIcon>\n                  <PersonOutlined style={{ color: '#FDFFFF' }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Profile\" />\n              </ListItem>\n              <hr />\n              <InterestsNewsSourcesMenu />\n            </React.Fragment>\n          )}\n        </List>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: state.loggedInReducer.loggedIn,\n    notificationsCount: state.badgesReducer.notifications,\n    messagesCount: state.badgesReducer.messages\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getBadges: (notifications, messages) => dispatch({ type: 'GET_BADGES', notifications: notifications, messages: messages })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Menu));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleNewPost = (e, props) => {\n  e.preventDefault();\n\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    return;\n  }\n\n  const content = e.target.content.value;\n  const tags = content.split(' ').filter(word => word[0] === '#').map(tag => tag.slice(1).toLowerCase());\n\n  if (!content) {\n    alert('Post must contain content');\n    return;\n  }\n\n  const postObj = {\n    post: {\n      content: content,\n      tags: tags\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(postObj)\n  }\n\n  fetch(`${API_ROOT}/posts`, fetchObj)\n    .then(res => res.json())\n    .then(post => {\n      if (post.message) {\n        alert(post.message);\n      } else {\n        props.createNewPost(post);\n      }\n    })\n    .catch(() => alert('Something went wrong'))\n\n  e.target.reset();\n}\n\nconst NewPostForm = (props) => {\n  return (\n    <div className='new-post-form-container'>\n      <form className='bulletin-form' onSubmit={(e) => handleNewPost(e, props)}>\n        <input type='text' name='content' placeholder='Write a new post...' />\n        <input type='submit' value='Post' />\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewPost: (post) => dispatch({ type: 'CREATE_NEW_POST', post: post })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(NewPostForm);","export default (inputDate) => {\n  const date = new Date(Date.parse(inputDate));\n\n  const timeOptions = {\n    hour: 'numeric', minute: 'numeric'\n  }\n  const dateOptions = {\n    month: 'short', day: 'numeric', year: 'numeric'\n  }\n\n  const timeFormat = new Intl.DateTimeFormat('en-US', timeOptions).format(date);\n  const dateFormat = new Intl.DateTimeFormat('en-US', dateOptions).format(date);\n\n  return `${timeFormat} - ${dateFormat}`;\n}","import React from 'react';\nimport { withRouter } from 'react-router';\nimport formatDate from '../../Helpers/formatDate';\n\nconst Comment = (props) => {\n  return (\n    <React.Fragment>\n      <div className='comment-user' onClick={() => props.history.push(`/profile/${props.comment.user.username}`)}>{props.comment.user.username}</div>\n      <div className='comment-content'>{props.comment.content}</div>\n      <div className='comment-date'>{formatDate(props.comment.created_at)}</div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Comment);","import React from 'react';\nimport Comment from '../../Components/Comments/Comment';\n\nconst mapComments = (comments) => {\n  return comments.map(comment =>\n    <div className='comment' key={comment.id}>\n      <Comment comment={comment} />\n    </div>\n  )\n}\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <div className='comments-list'>\n      {comments.length > 0 &&\n        <React.Fragment>\n          {mapComments(comments)}\n        </React.Fragment>}\n    </div>\n  )\n}\n\nexport default CommentsList;","import React from 'react';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleNewComment = (e, props) => {\n  e.preventDefault();\n\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to write comment');\n    e.target.reset();\n    return;\n  }\n\n  const commentObj = {\n    comment: { content: e.target.content.value },\n    post: props.post\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(commentObj)\n  }\n\n  fetch(`${API_ROOT}/comments`, fetchObj)\n    .then(res => res.json())\n    .then(post => {\n      if (post.message) {\n        alert(post.message);\n      } else {\n        props.updatePosts(post);\n      }\n    })\n    .catch((error) => alert('Something went wrong' + error))\n\n  e.target.reset();\n}\n\nconst NewCommentForm = (props) => {\n  return (\n    <div className='new-comment-form-container'>\n      <form className='new-comment-form' onSubmit={(e) => handleNewComment(e, props)}>\n        <div className='comment-form'>\n          <input name=\"content\" placeholder='Write a comment...' />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default NewCommentForm;","import React from 'react';\nimport { connect } from 'react-redux';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from '../../Components/Comments/NewCommentForm';\n\nconst CommentsContainer = (props) => {\n  return (\n    <div className='comments-container'>\n      <CommentsList comments={props.post.comments} />\n      {props.loggedIn && <NewCommentForm post={props.post} updatePosts={props.updatePosts} />}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: state.loggedInReducer.loggedIn\n  }\n}\n\nexport default connect(mapStateToProps)(CommentsContainer);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport PostFooter from './PostFooter';\nimport formatDate from '../../Helpers/formatDate';\n\nconst RegularUserPost = (props) => {\n  return (\n    <div className='user-post'>\n      <div className='user-post-content-container'>\n        <div className='user-post-username' onClick={() => props.history.push(`/profile/${props.post.user.username}`)}>{props.post.user.username}</div>\n        <div className='post-date'>{formatDate(props.post.created_at)}</div>\n        <div className='user-post-content'>{props.post.content}</div>\n      </div>\n      {!props.isSharedPost && <PostFooter post={props.post} updatePosts={props.updatePosts} />}\n    </div>\n  )\n}\n\nexport default withRouter(RegularUserPost);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from '@material-ui/core';\nimport NewsPost from './NewsPost';\nimport RegularUserPost from './RegularUserPost';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst sharePost = (e, props) => {\n  e.preventDefault();\n\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to share a post');\n    return;\n  }\n\n  const content = e.target.content.value;\n  const tags = content.split(' ').filter(word => word[0] === '#').map(tag => tag.slice(1).toLowerCase())\n\n  const sharedPostObj = {\n    shared_post: {\n      content: content,\n      tags: tags,\n      shared_post: props.post\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(sharedPostObj)\n  }\n\n  fetch(`${API_ROOT}/create-shared-post`, fetchObj)\n    .then(res => res.json())\n    .then(sharedPostResponse => {\n      if (sharedPostResponse.message) {\n        alert(sharedPostResponse.message);\n      } else {\n        props.createNewPost(sharedPostResponse)\n        props.handleClose();\n      }\n    })\n}\n\nconst renderSharedPost = (props) => {\n  return props.post.is_news_story ?\n    <NewsPost post={props.post} isSharedPost={true} updatePosts={props.updatePosts} />\n    :\n    <RegularUserPost post={props.post} isSharedPost={true} updatePosts={props.updatePosts} />\n}\n\nconst SharePostModal = (props) => {\n  return (\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n    >\n      <div className='bulletin-modal'>\n        <form className='bulletin-form-tertiary' onSubmit={(e) => sharePost(e, props)}>\n          <input type='text' name=\"content\" placeholder='Write about this post...' />\n          <input className='share-post-button' type=\"submit\" value='Share' />\n        </form>\n        {renderSharedPost(props)}\n      </div>\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createNewPost: (post) => dispatch({ type: 'CREATE_NEW_POST', post: post })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SharePostModal);","import React, { useState } from 'react';\nimport CommentsContainer from '../../Containers/Comments/CommentsContainer';\nimport { Button, Icon } from '@material-ui/core';\nimport { ThumbUpOutlined, ChatOutlined, ShareOutlined } from '@material-ui/icons';\nimport SharePostModal from './SharePostModal';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst likePost = (props) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to like post');\n    return;\n  }\n\n  const postObj = {\n    post: props.post\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(postObj)\n  }\n\n  fetch(`${API_ROOT}/likes`, fetchObj)\n    .then(res => res.json())\n    .then(postResponse => {\n      if (postResponse.message) {\n        alert(postResponse.message);\n      } else {\n        props.updatePosts(postResponse)\n      }\n    })\n    .catch((error) => alert('Something went wrong ' + error))\n}\n\nconst PostFooter = (props) => {\n  const [commentDrawerOpen, setCommentDrawer] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n\n  return (\n    <div className='post-footer'>\n      <Button style={{ color: '#8798A5' }} onClick={() => likePost(props)}>\n        <Icon className='post-icon'>\n          <ThumbUpOutlined />\n        </Icon>\n      </Button>\n      <span className='post-count'>{props.post.likes_count}</span>\n      <Button style={{ color: '#8798A5' }} onClick={() => setCommentDrawer(!commentDrawerOpen)}>\n        <Icon className='post-icon'>\n          <ChatOutlined />\n        </Icon>\n      </Button>\n      <span>{props.post.comments.length}</span>\n      <Button style={{ color: '#8798A5', float: 'right' }} onClick={() => setModalOpen(true)}>\n        <Icon className='post-icon'>\n          <ShareOutlined />\n        </Icon>\n      </Button>\n      {/* {commentDrawerOpen && <CommentsContainer post={props.post} updatePosts={props.updatePosts} />} */}\n      <CommentsContainer post={props.post} updatePosts={props.updatePosts} />\n      {modalOpen && <SharePostModal open={modalOpen} handleClose={() => setModalOpen(false)} post={props.post} updatePosts={props.updatePosts} />}\n    </div>\n  );\n}\n\nexport default PostFooter;","import React from 'react';\nimport PostFooter from './PostFooter';\nimport formatDate from '../../Helpers/formatDate';\n\nconst NewsPost = (props) => {\n  return (\n    <div className='news-story-post'>\n      <div className='news-story-content-container' onClick={() => window.open(props.post.news_url, '_blank')}>\n        <div className='news-story-header'>\n          <div className='news-story-source'>{props.post.news_source}</div>\n          <div className='post-date'>{formatDate(props.post.created_at)}</div>\n        </div>\n        <div className='post-title' >{props.post.news_title.split(' - ')[0]}</div>\n        {props.post.news_image && <img className='news-story-img' src={props.post.news_image} alt='news-story' />}\n        <div className='post-content'>{props.post.content}</div>\n        {props.post.news_author && <div className='news-story-author'>Written By: {props.post.news_author}</div>}\n      </div>\n      {!props.isSharedPost && <PostFooter post={props.post} updatePosts={props.updatePosts} />}\n    </div>\n  )\n}\n\nexport default NewsPost;","import React from 'react';\nimport { withRouter } from 'react-router';\nimport PostFooter from './PostFooter';\nimport NewsPost from './NewsPost';\nimport RegularUserPost from './RegularUserPost';\nimport formatDate from '../../Helpers/formatDate';\n\nconst renderSharedPost = (props) => {\n  return props.post.shared_post.is_news_story ?\n    <NewsPost post={props.post.shared_post} isSharedPost={true} updatePosts={props.updatePosts} />\n    :\n    <RegularUserPost post={props.post.shared_post} isSharedPost={true} updatePosts={props.updatePosts} />\n}\n\nconst SharedUserPost = (props) => {\n  return (\n    <div className='user-post'>\n      <div className='user-post-content-container'>\n        <div className='user-post-username' onClick={() => props.history.push(`/profile/${props.post.user.username}`)}>{props.post.user.username}</div>\n        <span className='user-post-shared'>shared...</span>\n        <div className='post-date'>{formatDate(props.post.created_at)}</div>\n        <div className='user-post-content'>{props.post.content}</div>\n      </div>\n      <div className='shared-post-container'>\n        {renderSharedPost(props)}\n      </div>\n      <PostFooter post={props.post} updatePosts={props.updatePosts} />\n    </div>\n  )\n}\n\nexport default withRouter(SharedUserPost);","import React from 'react';\nimport RegularUserPost from './RegularUserPost';\nimport SharedUserPost from './SharedUserPost';\n\nconst renderPost = (props) => {\n  return props.post.shared_post ?\n    <SharedUserPost\n      post={props.post}\n      updatePosts={props.updatePosts}\n    />\n    :\n    <RegularUserPost\n      post={props.post}\n      updatePosts={props.updatePosts}\n    />\n}\n\nconst UserPost = (props) => {\n  return (\n    <React.Fragment>\n      {renderPost(props)}\n    </React.Fragment>\n  )\n}\n\nexport default UserPost;","import React from 'react';\nimport NewsPost from '../../Components/Posts/NewsPost';\nimport UserPost from '../../Components/Posts/UserPost';\n\nconst mapPosts = (props) => {\n  return props.posts.map((post, i) => {\n    if (post.is_news_story) {\n      return <NewsPost post={post} key={i} updatePosts={props.updatePosts} />\n    } else {\n      return <UserPost post={post} key={i} updatePosts={props.updatePosts} />\n    }\n  }\n  );\n}\n\nconst PostsList = (props) => {\n  return (\n    <React.Fragment>\n      {props.posts && mapPosts(props)}\n    </React.Fragment>\n  );\n}\n\nexport default PostsList","import React from 'react';\nimport { connect } from 'react-redux';\nimport NewPostForm from '../../Components/Posts/NewPostForm';\nimport PostsList from '../Posts/PostsList';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass HomeContainer extends React.Component {\n  componentDidMount() {\n    this.fetchPosts();\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  fetchPosts = () => {\n    const token = localStorage.getItem('auth_token');\n\n    let fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    if (token) {\n      fetchObj = { ...fetchObj, headers: { ...fetchObj.headers, 'Auth-Token': token } };\n    }\n\n    fetch(`${API_ROOT}/posts`, fetchObj)\n      .then(res => res.json())\n      .then(posts => {\n        this.props.getPosts(posts);\n      })\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        {this.props.isLoggedIn && <NewPostForm />}\n        <PostsList posts={this.props.posts} updatePosts={this.props.updatePosts} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.loggedInReducer.loggedIn,\n    posts: state.postsReducer.posts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: (posts) => dispatch({ type: 'GET_POSTS', posts: posts }),\n    updatePosts: (post) => dispatch({ type: 'UPDATE_POSTS', post: post })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleTagSearch = (e, props) => {\n  e.preventDefault();\n\n  const token = localStorage.getItem('auth_token');\n\n  const names = e.target.tags.value.split(' ')\n    .map(tag => {\n      if (tag[0] === '#') {\n        return tag.slice(1).toLowerCase();\n      } else {\n        return tag.toLowerCase();\n      }\n    })\n\n  const tagsObj = {\n    tags: {\n      names: names\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(tagsObj)\n  }\n\n  fetch(`${API_ROOT}/get-posts-by-tag`, fetchObj)\n    .then(res => res.json())\n    .then(posts => {\n      if (posts.message) {\n        alert(posts.message);\n      } else {\n        props.getPosts(posts);\n      }\n    })\n}\n\nconst TagSearchForm = (props) => {\n  return (\n    <div className='search-tag-form-container'>\n      <form className='bulletin-form' onSubmit={(e) => handleTagSearch(e, props)}>\n        <input type='text' name='tags' placeholder='Search a tag...' />\n        <input type='submit' value='Search' />\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: (posts) => dispatch({ type: 'GET_POSTS', posts: posts })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(TagSearchForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport TagSearchForm from '../../Components/Tags/TagSearchForm';\nimport PostsList from '../Posts/PostsList';\n\nclass TagsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getPosts([]);\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        <TagSearchForm />\n        <PostsList posts={this.props.posts} updatePosts={this.props.updatePosts} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.postsReducer.posts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: posts => dispatch({ type: 'GET_POSTS', posts: posts }),\n    updatePosts: (post) => dispatch({ type: 'UPDATE_POSTS', post: post })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TagsContainer);","import React from 'react';\n\nconst mapParticipants = (participants) => {\n  return participants.map(participant => participant.user.username).join(', ');\n}\n\nconst getLastMessage = (messages) => {\n  if (messages.length > 0) {\n    const message = messages[messages.length - 1];\n    return `${message.user.username}: ${message.content}`;\n  } else {\n    return '';\n  }\n}\n\nconst Conversation = (props) => {\n  return (\n    <div className='conversation-container' onClick={() => props.loadConversation(props.conversation, props.username, props.openConversation, props.setOpenConversation)} style={{ cursor: 'pointer' }}>\n      {props.conversation.unread_messages_count > 0 && <div className='message-notification-badge'>{props.conversation.unread_messages_count}</div>}\n      <div className='conversation-participants'>{mapParticipants(props.conversation.participants)}</div>\n      <div className='conversation-last-message'>{getLastMessage(props.conversation.messages)}</div>\n    </div>\n  )\n}\n\nexport default Conversation;","import React from \"react\";\nimport Conversation from '../../Components/Conversations/Conversation';\n\nconst mapConversations = (props) => {\n  return props.conversations.map((conversation) => <Conversation\n    key={conversation.id}\n    conversation={conversation}\n    loadConversation={props.loadConversation}\n    username={props.username}\n    openConversation={props.openConversation}\n    setOpenConversation={props.setOpenConversation}\n  />);\n};\n\nconst ConversationsList = (props) => {\n  return (\n    <React.Fragment>\n      {props.conversations.length > 0 ?\n        <React.Fragment>{mapConversations(props)}</React.Fragment>\n        :\n        <div className='no-notifications-messages'>Looks like you don't have any messages</div>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default ConversationsList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleSearch = (e, setSearchedParticipants) => {\n  e.preventDefault();\n\n  const userObj = {\n    user: {\n      username: e.target.username.value\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  }\n\n  fetch(`${API_ROOT}/search-users`, fetchObj)\n    .then(res => res.json())\n    .then(searchedUsers => {\n      setSearchedParticipants(searchedUsers.map(user => user.username));\n    })\n    .catch(() => 'Something went wrong');\n\n  e.target.reset();\n}\n\nconst mapSearchedParticipants = (searchedParticipants, setSearchedParticipants, participants, setParticipants) => {\n  return searchedParticipants.map(participant =>\n    <ListItem button name='username' key={participant} onClick={(e) => addUserToParticipants(e, setSearchedParticipants, participants, setParticipants)}>\n      <ListItemText primary={participant} />\n    </ListItem>)\n}\n\nconst addUserToParticipants = (e, setSearchedParticipants, participants, setParticipants) => {\n  setParticipants([...participants, e.target.textContent]);\n  setSearchedParticipants([]);\n}\n\nconst handleNewConversation = (e, participants, props) => {\n  e.preventDefault();\n\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to start conversation')\n    return;\n  }\n\n  const conversationObj = {\n    conversation: {\n      participant_usernames: participants\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(conversationObj)\n  }\n\n  fetch(`${API_ROOT}/conversations`, fetchObj)\n    .then(res => res.json())\n    .then(conversationResponse => {\n      if (conversationResponse.message) {\n        alert(conversationResponse.message)\n      } else {\n        props.addConversation(conversationResponse);\n        props.loadConversation(conversationResponse, props.username, props.openConversation, props.setOpenConversation);\n        props.setNewConversationDrawer(false);\n      }\n    })\n    .catch(error => alert(`Something went wrong - ${error}`));\n}\n\nconst NewConversationForm = (props) => {\n  const [participants, setParticipants] = useState([]);\n  const [searchedParticipants, setSearchedParticipants] = useState([]);\n\n  return (\n    <div className='new-conversation-form'>\n      <div className='new-conversation-search-user-container'>\n        <form className='bulletin-form-secondary' onSubmit={(e) => handleSearch(e, setSearchedParticipants)}>\n          <input type='text' name='username' placeholder='Search to add a user to the conversation...' />\n          <input type=\"submit\" value='Search' />\n        </form>\n        <List>\n          {mapSearchedParticipants(searchedParticipants, setSearchedParticipants, participants, setParticipants)}\n        </List>\n      </div>\n      {participants.length > 0 &&\n        <div className='new-participants-container'>\n          <div className='new-participants-title'>Participants</div>\n          <div className='new-participants'>{participants.join(', ')}</div>\n        </div>\n      }\n      <form className='start-conversation-form' onSubmit={(e) => handleNewConversation(e, participants, props)}>\n        <input className='start-conversation-button' type=\"submit\" value='Start conversation' />\n      </form>\n    </div>\n  )\n}\n\nconst matchDispatchToProps = (dispatch) => {\n  return {\n    addConversation: conversation => dispatch({ type: 'ADD_CONVERSATION', conversation: conversation })\n  }\n}\n\nexport default connect(null, matchDispatchToProps)(NewConversationForm);","import React, { useState } from 'react';\nimport NewConversationForm from './NewConversationForm';\n\nconst NewConversationFooter = (props) => {\n  const [newConversationDrawer, setNewConversationDrawer] = useState(false)\n  return (\n    <React.Fragment>\n      <button className='new-conversation-button' onClick={() => setNewConversationDrawer(!newConversationDrawer)}>Start a new conversation</button>\n      {newConversationDrawer &&\n        <NewConversationForm\n          loadConversation={props.loadConversation}\n          username={props.username}\n          openConversation={props.openConversation}\n          setOpenConversation={props.setOpenConversation}\n          setNewConversationDrawer={setNewConversationDrawer}\n        />}\n    </React.Fragment>\n  )\n}\n\nexport default NewConversationFooter;","import React from 'react';\nimport { connect } from 'react-redux';\nimport ConversationsList from '../Conversations/ConversationsList';\nimport NewConversationFooter from '../../Components/Conversations/NewConversationFooter';\nimport { Widget, deleteMessages, addResponseMessage, addUserMessage, markAllAsRead, toggleWidget } from 'react-chat-widget'\nimport 'react-chat-widget/lib/styles.css';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass ConversationsContainer extends React.Component {\n  componentDidMount() {\n    this.fetchConversations();\n  }\n\n  fetchConversations = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be logged in to see conversations');\n      return;\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token,\n      },\n    };\n\n    fetch(`${API_ROOT}/conversations`, fetchObj)\n      .then((res) => res.json())\n      .then((conversationData) => {\n        if (conversationData.message) {\n          alert(conversationData.message);\n        } else {\n          this.props.getConversations(conversationData.username, conversationData.conversations);\n        }\n      })\n      .catch((error) => alert('Something went wrong ' + error));\n  };\n\n  loadConversation = (conversation, username, openConversation, setOpenConversation) => {\n    deleteMessages();\n    conversation.messages.forEach(message => {\n      if (message.user.username === username) {\n        addUserMessage(message.content);\n      } else {\n        if (conversation.participants.length > 2) {\n          addResponseMessage(`${message.user.username} --- ${message.content}`);\n        } else {\n          addResponseMessage(message.content)\n        }\n      }\n    })\n    markAllAsRead();\n    this.setMessagesRead(conversation);\n    if (!openConversation) {\n      toggleWidget();\n    }\n    setOpenConversation(conversation);\n  }\n\n  setMessagesRead = (conversation) => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be logged in to update messages');\n      return;\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/conversations/${conversation.id}/set-messages-read`, fetchObj)\n      .then(res => res.json())\n      .then(conversationResponse => {\n        if (!conversationResponse.message) {\n          this.props.udpateConversation(conversationResponse);\n          this.props.setMessagesBadgeCount(this.props.messagesCount - conversation.unread_messages_count)\n        }\n      })\n  }\n\n  getCustomLauncher = (handleToggle, openConversation, setOpenConversation) => {\n    return (openConversation && <button className='close-chat-button' onClick={() => this.handleChatClose(handleToggle, setOpenConversation)}>Close Chat</button>)\n  }\n\n  handleChatClose = (handleToggle, setOpenConversation) => {\n    handleToggle();\n    setOpenConversation(null);\n  }\n\n  handleNewUserMessage = (content) => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be logged in to send messages');\n      return;\n    }\n\n    const messageObj = {\n      message: {\n        content: content,\n        conversation_id: this.props.openConversation.id\n      }\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token,\n      },\n      body: JSON.stringify(messageObj)\n    };\n\n    fetch(`${API_ROOT}/messages`, fetchObj)\n      .then((res) => res.json())\n      .then((messageResponse) => {\n        if (messageResponse.message) {\n          alert(messageResponse.message);\n        } else {\n          this.props.addMessageToConversation(messageResponse, this.props.openConversation.id)\n        }\n      })\n      .catch((error) => alert('Something went wrong ' + error));\n  }\n\n  render() {\n    return (\n      <div className='conversations-container'>\n        <ConversationsList\n          conversations={this.props.conversations}\n          loadConversation={this.loadConversation}\n          username={this.props.username}\n          openConversation={this.props.openConversation}\n          setOpenConversation={this.props.setOpenConversation}\n        />\n        <NewConversationFooter\n          loadConversation={this.loadConversation}\n          username={this.props.username}\n          openConversation={this.props.openConversation}\n          setOpenConversation={this.props.setOpenConversation}\n        />\n        <div className='widget-container'>\n          <Widget\n            title='Bulletin Chat'\n            subtitle=''\n            handleNewUserMessage={this.handleNewUserMessage}\n            showCloseButton={true}\n            showTimeStamp={false}\n            launcher={handleToggle => this.getCustomLauncher(handleToggle, this.props.openConversation, this.props.setOpenConversation)}\n            senderPlaceHolder='Send a message...'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.conversationsReducer.username,\n    conversations: state.conversationsReducer.conversations,\n    openConversation: state.conversationsReducer.openConversation,\n    messagesCount: state.badgesReducer.messages\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getConversations: (username, conversations) => dispatch({ type: 'GET_CONVERSATIONS', username: username, conversations: conversations }),\n    setOpenConversation: conversation => dispatch({ type: 'SET_OPEN_CONVERSATION', conversation: conversation }),\n    addMessageToConversation: (message, conversationId) => dispatch({ type: 'ADD_MESSAGE_TO_CONVERSATION', message: message, conversationId: conversationId }),\n    udpateConversation: conversation => dispatch({ type: 'UPDATE_CONVERSATION', conversation: conversation }),\n    setMessagesBadgeCount: messagesCount => dispatch({ type: 'SET_MESSAGES_BADGE_COUNT', messagesCount: messagesCount })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConversationsContainer);\n","import React from 'react';\nimport formatDate from '../../Helpers/formatDate';\n\nconst Notification = ({ content, created_at, notification_type }) => {\n  return (\n    <div className='notification-container'>\n      <div className='notification-date'>{formatDate(created_at)}</div>\n      <div className='notification-content'>{content}</div>\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\nimport { connect } from 'react-redux';\nimport formatDate from '../../Helpers/formatDate';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleAccept = (props) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to accept follow request');\n    return;\n  }\n\n  const acceptObj = {\n    follow_request: {\n      follower: props.content.split(' ')[0]\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(acceptObj)\n  }\n\n  fetch(`${API_ROOT}/accept-follow-request`, fetchObj)\n    .then(res => res.json())\n    .then(acceptResponse => {\n      if (acceptResponse.message) {\n        alert(acceptResponse.message);\n      } else {\n        props.deleteNotification(acceptResponse.notification_content)\n      }\n    })\n}\n\nconst handleDeny = (props) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    alert('Must be logged in to deny follow request');\n    return;\n  }\n\n  const denyObj = {\n    follow_request: {\n      follower: props.content.split(' ')[0]\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    },\n    body: JSON.stringify(denyObj)\n  }\n\n  fetch(`${API_ROOT}/deny-follow-request`, fetchObj)\n    .then(res => res.json())\n    .then(denyResponse => {\n      if (denyResponse.message) {\n        alert(denyResponse.message);\n      } else {\n        props.deleteNotification(denyResponse.notification_content)\n      }\n    })\n}\n\nconst FollowRequestNotification = (props) => {\n  return (\n    <div className='notification-container'>\n      <div className='notification-date'>{formatDate(props.created_at)}</div>\n      <div className='notification-content'>{props.content}</div>\n      <button className='follow-accept-button' onClick={() => handleAccept(props)}>Accept</button>\n      <button className='follow-deny-button' onClick={() => handleDeny(props)}>Deny</button>\n    </div>\n  )\n}\n\nconst mapDispatchToPros = (dispatch) => {\n  return {\n    deleteNotification: notification_content => dispatch({ type: 'DELETE_NOTIFICATION', notification_content: notification_content })\n  }\n}\n\nexport default connect(null, mapDispatchToPros)(FollowRequestNotification);","import React from 'react';\nimport { connect } from 'react-redux';\nimport GeneralNotification from '../../Components/Notifications/GeneralNotification';\nimport FollowRequestNotification from '../../Components/Notifications/FollowRequestNofication';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass NotificationsContainer extends React.Component {\n  componentDidMount() {\n    this.fetchNotifications()\n  }\n\n  fetchNotifications = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be signed in to see notifications');\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/notifications`, fetchObj)\n      .then(res => res.json())\n      .then(notifications => {\n        if (notifications.message) {\n          alert(notifications.message)\n        } else {\n          this.props.getNotifications(notifications);\n          this.props.setNotificationsRead();\n        }\n      })\n      .catch(() => 'Something went wrong');\n  }\n\n  mapNotifications = () => {\n    return this.props.notifications.map(notification => {\n      switch (notification.notification_type) {\n        case 'general':\n          return <GeneralNotification\n            key={notification.id}\n            content={notification.content}\n            created_at={notification.created_at}\n            id={notification.id}\n            notification_type={notification.notification_type}\n          />\n        case 'follow request':\n          return <FollowRequestNotification\n            key={notification.id}\n            content={notification.content}\n            created_at={notification.created_at}\n            id={notification.id}\n            notification_type={notification.notification_type}\n          />\n        default:\n          return <GeneralNotification\n            key={notification.id}\n            content={notification.content}\n            created_at={notification.created_at}\n            id={notification.id}\n            notification_type={notification.notification_type}\n          />\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className='notifications-container'>\n        {this.props.notifications.length > 0 ?\n          <React.Fragment>{this.mapNotifications()}</React.Fragment>\n          :\n          <div className='no-notifications-messages'>Looks like you don't have any notifications</div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.notificationsReducer.notifications\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getNotifications: (notifications) => dispatch({ type: 'GET_NOTIFICATIONS', notifications: notifications }),\n    setNotificationsRead: () => dispatch({ type: 'SET_NOTIFICATIONS_READ' })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationsContainer);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst redirect = (history) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (!token) {\n    history.push('/home');\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Auth-Token': token\n    }\n  }\n\n  fetch(`${API_ROOT}/get-username`, fetchObj)\n    .then(res => res.json())\n    .then(usernameResponse => {\n      if (usernameResponse.username) {\n        history.push(`/profile/${usernameResponse.username}`);\n      } else {\n        history.push('/home');\n      }\n    });\n\n  return <React.Fragment />\n}\n\nconst UserPageRedirect = (props) => {\n  return (\n    <React.Fragment>\n      {redirect(props.history)}\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(UserPageRedirect);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport formatDate from '../../Helpers/formatDate';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass UserHeader extends React.Component {\n  state = {\n    username: ''\n  }\n\n  componentDidMount() {\n    this.getUsername();\n  }\n\n  getUsername = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-username`, fetchObj)\n      .then(res => res.json())\n      .then(usernameResponse => {\n        if (usernameResponse.username) {\n          this.setState({ ...this.state, username: usernameResponse.username });\n        }\n      })\n  }\n\n  handleFollowRequest = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return;\n    }\n\n    const followObj = {\n      follow_request: { followed: this.props.match.params.username }\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify(followObj)\n    }\n\n    fetch(`${API_ROOT}/follow_requests`, fetchObj)\n      .then(res => res.json())\n      .then(followResponse => {\n        if (followResponse.message) {\n          alert(followResponse.message);\n        } else {\n          this.props.updateFollow(followResponse.result);\n        }\n      })\n      .catch((response) => alert('Something went wrong'))\n  }\n\n  render() {\n    return (\n      <div className='user-header'>\n        <div className='user-header-username'>{this.props.user.username}</div>\n        <div className='user-header-info'>\n          <Grid container>\n            <Grid item xs={6}>\n              <div className='user-header-bio'>Bio: {this.props.user.bio}</div>\n              <div className='user-header-member-since'>Member since: {formatDate(this.props.user.created_at).split(' - ')[1]}</div>\n            </Grid>\n            <Grid item xs={6}>\n              <div className='user-header-count'>Posts: {this.props.user.posts_count}</div>\n              <div className='user-header-count'>Following: {this.props.user.followers_count}</div>\n              <div className='user-header-count'>Followers: {this.props.user.following_count}</div>\n            </Grid>\n          </Grid>\n        </div>\n        {\n          this.state.username !== this.props.match.params.username && this.props.loggedIn &&\n          <button className='follow-button' onClick={() => this.handleFollowRequest()}>\n            {this.props.following}\n          </button>\n        }\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: state.loggedInReducer.loggedIn,\n    following: state.userReducer.user.following\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateFollow: (following) => dispatch({ type: 'UPDATE_FOLLOW', following: following })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserHeader));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport UserHeader from '../../Components/User Page/UserHeader';\nimport PostsList from '../Posts/PostsList';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass UserPageContainer extends React.Component {\n  componentDidMount() {\n    this.getUserInfo();\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  getUserInfo = () => {\n    const token = localStorage.getItem('auth_token');\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/users/${this.props.match.params.username}`, fetchObj)\n      .then(res => res.json())\n      .then(user => {\n        if (!user.message) {\n          this.props.getUser(user);\n        } else {\n          console.log(user.message);\n        }\n      })\n  }\n\n  renderUser = () => {\n    const userPopulated = Object.keys(this.props.user).length > 0\n    return <React.Fragment>\n      {userPopulated && (\n        <React.Fragment>\n          <UserHeader user={this.props.user} />\n          <PostsList posts={this.props.user.posts} updatePosts={this.props.updatePosts} />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        {this.renderUser()}\n      </React.Fragment>\n    )\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUser: user => dispatch({ type: 'GET_USER', user: user }),\n    updatePosts: (post) => dispatch({ type: 'UPDATE_USER_POSTS', post: post })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserPageContainer));","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleLogin = (e, props) => {\n  e.preventDefault();\n\n  const userObj = {\n    user: {\n      username_email: e.target.username_email.value,\n      password: e.target.password.value\n    }\n  }\n\n  e.target.reset();\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  }\n\n  fetch(`${API_ROOT}/login`, fetchObj)\n    .then(res => res.json())\n    .then(loginResponse => {\n      if (loginResponse.token) {\n        localStorage.setItem('auth_token', loginResponse.token);\n        props.setLoggedIn(true);\n        props.history.push('/home');\n        props.history.go();\n      }\n      else {\n        localStorage.removeItem('auth_token');\n        props.setLoggedIn(false);\n        alert(loginResponse.message);\n      }\n    })\n    .catch(() => {\n      localStorage.removeItem('auth_token');\n      props.setLoggedIn(false);\n      alert('Something went wrong');\n    });\n}\n\nconst LoginForm = (props) => {\n  return (\n    <div className='account-form-container'>\n      <h2>Login</h2>\n      <form className='account-form' onSubmit={(e) => handleLogin(e, props)}>\n        <div className='account-label'>Username / Email:</div>\n        <input type='text' name=\"username_email\" />\n        <div className='account-label'>Password:</div>\n        <input type='password' name=\"password\" autoComplete=\"on\" />\n        <input type=\"submit\" value='Login' />\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedIn: loggedIn => dispatch({ type: 'SET_LOGGED_IN', loggedIn: loggedIn })\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginForm));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleSignup = (e, props) => {\n  e.preventDefault();\n\n  const userObj = {\n    user: {\n      email: e.target.email.value,\n      username: e.target.username.value,\n      bio: e.target.bio.value,\n      password: e.target.password.value,\n      password_confirmation: e.target.passwordConfirmation.value,\n      is_private: e.target.isPrivate.checked\n    }\n  }\n\n  e.target.reset();\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  }\n\n  fetch(`${API_ROOT}/signup`, fetchObj)\n    .then(res => res.json())\n    .then(signupResponse => {\n      if (signupResponse.token) {\n        localStorage.setItem('auth_token', signupResponse.token);\n        props.setLoggedIn(true);\n        props.setPickInterestsSources(!props.pickInterestsSources);\n      }\n      else {\n        localStorage.removeItem('auth_token');\n        props.setLoggedIn(false);\n        alert(signupResponse.message);\n      }\n    })\n    .catch(() => {\n      localStorage.removeItem('auth_token');\n      props.setLoggedIn(false);\n      alert('Something went wrong');\n    });\n}\n\nconst SignupAccountForm = (props) => {\n  return (\n    <div className='account-form-container'>\n      <h2>Signup</h2>\n      <form className='account-form' onSubmit={(e) => handleSignup(e, props)}>\n        <div className='account-label'>Email:</div>\n        <input type='text' name=\"email\" />\n        <div className='account-label'>Username:</div>\n        <input type='text' name=\"username\" />\n        <div className='account-label'>Bio:</div>\n        <input type='text' name=\"bio\" />\n        <div className='account-label'>Password:</div>\n        <input type='password' name=\"password\" autoComplete=\"on\" />\n        <div className='account-label'>Password Confirmation:</div>\n        <input type='password' name=\"passwordConfirmation\" autoComplete=\"on\" />\n        <FormControlLabel\n          control={<Checkbox style={{ color: '#3d6081' }} name=\"isPrivate\" color=\"primary\" />}\n          label=\"Private Account\"\n        />\n        <input type=\"submit\" value='Submit' />\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedIn: loggedIn => dispatch({ type: 'SET_LOGGED_IN', loggedIn: loggedIn })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignupAccountForm);","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nconst SignupSource = (props) => {\n  return (\n    <Grid item>\n      <div onClick={() => props.handleSourceChange(props.source.id)}>\n        <img\n          style={props.checked ? { boxShadow: 'inset 0px 0px 0px 5px #3d6081' } : { border: 'none' }}\n          className='signup-source-interest-image'\n          src={`/News Source Logos/${props.source.name}.jpg`}\n          alt='source'\n        />\n        <div className='signup-source-interest-label'>{props.source.name}</div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default SignupSource;","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nconst SingupInterest = (props) => {\n  return (\n    // <FormControlLabel\n    //   control={<Checkbox name={props.interest.id.toString()} color=\"primary\" onChange={(e) => props.handleInterestChange(e)} checked={props.checked} />}\n    //   label={props.interest.name}\n    // />\n    <Grid item>\n      <div onClick={() => props.handleInterestChange(props.interest.id)}>\n        <img\n          style={props.checked ? { boxShadow: 'inset 0px 0px 0px 5px #3d6081' } : { border: 'none' }}\n          className='signup-source-interest-image'\n          src={`/Interest Icons/${props.interest.name}.jpg`}\n          alt='interest'\n        />\n        <div className='signup-source-interest-label'>{props.interest.name}</div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default SingupInterest;","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport SignupSource from './SignupSource';\nimport SignupInterest from './SignupInterest';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass SignupInterestsSourcesForm extends React.Component {\n  componentDidMount() {\n    this.fetchSources();\n    this.fetchInterests();\n    this.fetchUserInterestsAndNewsSources();\n  }\n\n  fetchedNewsSources = false;\n  fetchedInterests = false;\n\n  fetchSources = () => {\n    fetch(`${API_ROOT}/news_sources`)\n      .then(res => res.json())\n      .then(sources => this.props.setSources(sources))\n      .catch(() => alert('Something went wrong'));\n  }\n\n  fetchInterests = () => {\n    fetch(`${API_ROOT}/interests`)\n      .then(res => res.json())\n      .then(interests => this.props.setInterests(interests))\n      .catch(() => alert('Something went wrong'));\n  }\n\n  fetchUserInterestsAndNewsSources = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return;\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-interests-and-news-sources`, fetchObj)\n      .then(res => res.json())\n      .then(iNResponse => {\n        if (!iNResponse.message) {\n          iNResponse.interests.forEach(interest => {\n            this.props.addInterest(interest.id);\n          })\n          iNResponse.news_sources.forEach(newsSource => {\n            this.props.addSource(newsSource.id);\n          })\n        }\n      });\n  }\n\n  mapSources = () => {\n    return this.props.sources.map(source => <SignupSource\n      key={source.id}\n      source={source}\n      handleSourceChange={this.handleSourceChange}\n      checked={this.props.selectedSources.includes(source.id)}\n    />)\n  }\n\n  mapInterests = () => {\n    return this.props.interests.map(interest => <SignupInterest\n      key={interest.id}\n      interest={interest}\n      handleInterestChange={this.handleInterestChange}\n      checked={this.props.selectedInterests.includes(interest.id)}\n    />)\n  }\n\n  handleSourceChange = (id) => {\n    if (this.props.selectedSources.includes(id)) {\n      this.props.removeSource(id);\n    } else {\n      this.props.addSource(id);\n    }\n  }\n\n  handleInterestChange = (id) => {\n    if (this.props.selectedInterests.includes(id)) {\n      this.props.removeInterest(id);\n    } else {\n      this.props.addInterest(id);\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be logged in to edit sources/interests');\n      return;\n    }\n\n    this.submitSources(token);\n    this.submitInterests(token);\n  }\n\n  submitSources = (token) => {\n    const sourcesObj = {\n      source: {\n        ids: this.props.selectedSources\n      }\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify(sourcesObj)\n    }\n\n    fetch(`${API_ROOT}/user_news_sources`, fetchObj)\n      .then(res => res.json())\n      .then(sourcesResponse => {\n        if (sourcesResponse.message) {\n          alert(sourcesResponse.message);\n        } else {\n          this.fetchedNewsSources = true;\n          this.waitFetch();\n        }\n      })\n  }\n\n  submitInterests = (token) => {\n    const interestsObj = {\n      interest: {\n        ids: this.props.selectedInterests\n      }\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify(interestsObj)\n    }\n\n    fetch(`${API_ROOT}/user_interests`, fetchObj)\n      .then(res => res.json())\n      .then(interestsResponse => {\n        if (interestsResponse.message) {\n          alert(interestsResponse.message);\n        } else {\n          this.fetchedInterests = true;\n          this.waitFetch();\n        }\n      })\n  }\n\n  waitFetch = () => {\n    if (this.fetchedNewsSources && this.fetchedNewsSources) {\n      this.props.history.push('/home');\n      this.props.history.go();\n    }\n  }\n\n  render() {\n    return (\n      <form className='signup-sources-interests-form' onSubmit={(e) => this.handleSubmit(e, this.props)}>\n        <div className='signup-sources-interests-submit-container'>\n          <input className='signup-sources-interests-submit' type='submit' value='Update Sources and Interests' />\n        </div>\n        <div className='signup-sources-interests-label'>Sources</div>\n        <div className='signup-interest-source-grid-container'>\n          <Grid\n            container\n            className='hidden-scroll'\n            style={{ maxHeight: '600px', overflowY: 'scroll' }}\n            justify=\"center\"\n          >\n            {this.mapSources()}\n          </Grid>\n        </div>\n        <div className='signup-sources-interests-label'>Interests</div>\n        <div className='signup-interest-source-grid-container'>\n          <Grid\n            container\n            className='hidden-scroll'\n            style={{ maxHeight: '600px', overflowY: 'scroll' }}\n            justify=\"center\"\n          >\n            {this.mapInterests()}\n          </Grid>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sources: state.signupReducer.sources,\n    interests: state.signupReducer.interests,\n    selectedSources: state.signupReducer.selectedSources,\n    selectedInterests: state.signupReducer.selectedInterests\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSources: sources => dispatch({ type: 'SET_SOURCES', sources: sources }),\n    setInterests: interests => dispatch({ type: 'SET_INTERESTS', interests: interests }),\n    addSource: source => dispatch({ type: 'ADD_SOURCE', source: source }),\n    removeSource: source => dispatch({ type: 'REMOVE_SOURCE', source: source }),\n    addInterest: interest => dispatch({ type: 'ADD_INTEREST', interest: interest }),\n    removeInterest: interest => dispatch({ type: 'REMOVE_INTEREST', interest: interest })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignupInterestsSourcesForm));","import React, { useState } from 'react';\nimport SignupAccountForm from '../../Components/Account/SignupAccountForm';\nimport SignupInterestsSourcesForm from '../../Components/Account/SignupInterestsSourcesForm'\n\nconst SignupFormsContainer = () => {\n  const [pickInterestsSources, setPickInterestsSources] = useState(false)\n\n  return (\n    <React.Fragment>\n      {!pickInterestsSources &&\n        <SignupAccountForm\n          pickInterestsSources={pickInterestsSources}\n          setPickInterestsSources={setPickInterestsSources}\n        />\n      }\n      {pickInterestsSources &&\n        <SignupInterestsSourcesForm\n          pickInterestsSources={pickInterestsSources}\n          setPickInterestsSources={setPickInterestsSources}\n        />\n      }\n    </React.Fragment>\n  )\n}\n\nexport default SignupFormsContainer;","import React from 'react';\nimport { withRouter } from 'react-router'\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass UpdateAccountForm extends React.Component {\n  state = {\n    username: '',\n    bio: ''\n  }\n\n  componentDidMount() {\n    this.getUsername();\n  }\n\n  getUsername = () => {\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/get-username`, fetchObj)\n      .then(res => res.json())\n      .then(usernameResponse => {\n        if (usernameResponse.username) {\n          this.getUserInfo(usernameResponse.username);\n        }\n      })\n  }\n\n  getUserInfo = (username) => {\n    const token = localStorage.getItem('auth_token');\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      }\n    }\n\n    fetch(`${API_ROOT}/users/${username}`, fetchObj)\n      .then(res => res.json())\n      .then(user => {\n        if (!user.message) {\n          this.setState({ ...this.state, username: user.username, bio: user.bio });\n        }\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({ ...this.state, [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('auth_token');\n\n    if (!token) {\n      alert('Must be logged in to update user account information');\n      return\n    }\n\n    const userObj = {\n      user: {\n        username: e.target.username.value,\n        bio: e.target.bio.value\n      }\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify(userObj)\n    }\n\n    fetch(`${API_ROOT}/update-user`, fetchObj)\n      .then(res => res.json())\n      .then(updateResponse => {\n        if (updateResponse.message) {\n          alert(updateResponse.message)\n        } else {\n          this.props.history.push('/home');\n          this.props.history.go();\n        }\n      })\n  }\n\n  render() {\n    return (\n      <form className='account-form' onSubmit={this.handleSubmit}>\n        <label>Username:</label>\n        <input type='text' name='username' value={this.state.username} onChange={this.handleChange} />\n        <label>Bio:</label>\n        <input type='text' name='bio' value={this.state.bio} onChange={this.handleChange} />\n        <input type='submit' value=\"Update Account Info\" />\n      </form>\n    )\n  }\n}\n\nexport default withRouter(UpdateAccountForm);","import React from 'react';\nimport UpdateAccountForm from '../../Components/Account/UpdateAccountForm';\nimport SignupInterestsSourcesForm from '../../Components/Account/SignupInterestsSourcesForm';\n\nclass UpdateProfileContainer extends React.Component {\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        <UpdateAccountForm />\n        <SignupInterestsSourcesForm />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default UpdateProfileContainer;","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PostsList from '../Posts/PostsList';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass InterestsContainer extends React.Component {\n  componentDidMount() {\n    this.fetchPosts();\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  fetchPosts = () => {\n    fetch(`${API_ROOT}/interests/${this.props.match.params.interest}`)\n      .then(res => res.json())\n      .then(interestResponse => {\n        this.props.getPosts(interestResponse)\n      })\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        <PostsList posts={this.props.posts} updatePosts={this.props.updatePosts} />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.interestsReducer.posts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: posts => dispatch({ type: 'GET_INTERESTS_POSTS', posts: posts }),\n    updatePosts: (post) => dispatch({ type: 'UPDATE_INTERESTS_POSTS', post: post })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InterestsContainer));","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PostsList from '../Posts/PostsList';\nimport { API_ROOT } from '../../services/apiRoot';\n\nclass NewsSourcesContainer extends React.Component {\n  componentDidMount() {\n    this.fetchPosts();\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  fetchPosts = () => {\n    fetch(`${API_ROOT}/news_sources/${this.props.match.params.newsSource}`)\n      .then(res => res.json())\n      .then(newsSourceResponse => {\n        this.props.getPosts(newsSourceResponse)\n      })\n  }\n\n  handleScroll = () => {\n    const scrollPosition = document.body.scrollTop || document.documentElement.scrollTop;\n    const button = document.querySelector('.back-to-top-button')\n    if (scrollPosition > 500) {\n      button.style.display = 'block'\n    } else {\n      button.style.display = 'none';\n    }\n  }\n\n  scrollToTop = () => {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className='back-to-top-button'\n          onClick={this.scrollToTop}\n        >Back to Top</button>\n        <PostsList posts={this.props.posts} updatePosts={this.props.updatePosts} />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.newsSourcesReducer.posts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: posts => dispatch({ type: 'GET_NEWS_SOURCES_POSTS', posts: posts }),\n    updatePosts: (post) => dispatch({ type: 'UPDATE_NEWS_SOURCES_POSTS', post: post })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewsSourcesContainer));","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomeContainer from './HomeContainer';\nimport TagsContainer from './TagsContainer';\nimport ConversationsContainer from './ConversationsContainer';\nimport NotificationsContainer from './NotificationsContainer';\nimport UserPageRedirect from '../../Components/User Page/UserPageRedirect';\nimport UserPageContainer from './UserPageContainer';\nimport LoginForm from '../../Components/Account/LoginForm';\nimport SignupFormsContainer from '../Account/SignupFormsContainer';\nimport UpdateProfileContainer from './UpdateProfileContainer';\nimport InterestsContainer from './InterestContainer';\nimport NewsSourcesContainer from './NewsSourcesContainer';\n\nconst MainContainer = (props) => {\n  return (\n    <div className='main-container'>\n      <Switch>\n        <Route exact path='/'>\n          <Redirect to='/home' />\n        </Route>\n        <Route exact path='/home' component={HomeContainer} />\n        <Route exact path='/tags' component={TagsContainer} />\n        <Route exact path='/messages' component={ConversationsContainer} />\n        <Route exact path='/notifications' component={NotificationsContainer} />\n        <Route exact path='/profile' component={UserPageRedirect} />\n        <Route exact path='/profile/:username' component={UserPageContainer} />\n        <Route exact path='/login' component={LoginForm} />\n        <Route exact path='/signup' component={SignupFormsContainer} />\n        <Route exact path='/update-profile' component={UpdateProfileContainer} />\n        <Route exact path='/interests/:interest' component={InterestsContainer} />\n        <Route exact path='/news-sources/:newsSource' component={NewsSourcesContainer} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { API_ROOT } from '../../services/apiRoot';\n\nconst handleSearch = (e, props) => {\n  e.preventDefault();\n\n  const userObj = {\n    user: {\n      username: e.target.username.value\n    }\n  }\n\n  const fetchObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  }\n\n  fetch(`${API_ROOT}/search-users`, fetchObj)\n    .then(res => res.json())\n    .then(searchedUsers => {\n      props.getSearchedUsers(searchedUsers)\n    })\n    .catch(() => 'Something went wrong');\n}\n\nconst FindUserForm = (props) => {\n  return (\n    <React.Fragment>\n      <div className='search-form-container'>\n        <form className='bulletin-form' onSubmit={(e) => handleSearch(e, props)}>\n          <input type='text' name='username' placeholder='Search users...' />\n          <input type='submit' value='Search users...' />\n        </form>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedUsers: state.searchedUsersReducer.searchedUsers\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSearchedUsers: searchedUsers => dispatch({ type: 'GET_SEARCHED_USERS', searchedUsers: searchedUsers })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindUserForm);","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\n\nconst handleClick = (e, props) => {\n  props.getSearchedUsers([]);\n  props.history.push(`/profile/${e.target.textContent}`);\n  props.history.go();\n  document.querySelector('#search-users-form').reset();\n}\n\nconst mapUsers = (props) => {\n  return props.searchedUsers.map(user =>\n    <ListItem button name='username' key={user.username} onClick={(e) => handleClick(e, props)}>\n      <ListItemText primary={user.username} />\n    </ListItem>\n  )\n}\n\nconst FindUserList = (props) => {\n  return (\n    <React.Fragment>\n      {props.searchedUsers.length > 0 && <div className='search-users-list'>\n        <List>\n          {mapUsers(props)}\n        </List>\n      </div>}\n    </React.Fragment>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSearchedUsers: searchedUsers => dispatch({ type: 'GET_SEARCHED_USERS', searchedUsers: searchedUsers })\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(FindUserList));","import React from 'react';\nimport { connect } from 'react-redux';\nimport SearchUsersForm from '../../Components/SearchUser/SearchUsersForm';\nimport SearchUsersList from '../../Components/SearchUser/SearchUsersList';\n\nconst FindUserContainer = (props) => {\n  return (\n    <div className='search-users-container'>\n      <SearchUsersForm />\n      <SearchUsersList searchedUsers={props.searchedUsers} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchedUsers: state.searchedUsersReducer.searchedUsers\n  }\n}\n\nexport default connect(mapStateToProps)(FindUserContainer);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Grid } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom'\nimport Header from './Navigation/Header'\nimport Menu from './Navigation/Menu';\nimport MainContainer from '../Containers/Main Containers/MainContainer';\nimport SearchUsersContainer from '../Containers/SearchUser/SearchUsersContainer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    if (localStorage.getItem('auth_token')) {\n      this.props.setLoggedIn(true);\n    } else {\n      this.props.setLoggedIn(false);\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <div className='content-container'>\n          <Grid container>\n            <Grid item xs={3}>\n              <Menu />\n            </Grid>\n            <Grid item xs={6}>\n              <MainContainer />\n            </Grid>\n            <Grid item xs={3}>\n              <SearchUsersContainer />\n            </Grid>\n          </Grid>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLoggedIn: (value) => dispatch({ type: 'SET_LOGGED_IN', loggedIn: value })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport badgesReducer from './Reducers/badgesReducer';\nimport loggedInReducer from './Reducers/loggedInReducer';\nimport conversationsReducer from './Reducers/conversationsReducer';\nimport interestsReducer from './Reducers/interestsReducer';\nimport menuReducer from './Reducers/menuReducer';\nimport newsSourcesReducer from './Reducers/newsSourcesReducer';\nimport notificationsReducer from './Reducers/notificationsReducer';\nimport postsReducer from './Reducers/postsReducer';\nimport searchedUsersReducer from './Reducers/searchedUsersReducer';\nimport signupReducer from './Reducers/signupReducer';\nimport userReducer from './Reducers/userReducer';\n\nconst rootReducer = combineReducers({\n  badgesReducer: badgesReducer,\n  loggedInReducer: loggedInReducer,\n  conversationsReducer: conversationsReducer,\n  interestsReducer: interestsReducer,\n  menuReducer: menuReducer,\n  newsSourcesReducer: newsSourcesReducer,\n  notificationsReducer: notificationsReducer,\n  postsReducer: postsReducer,\n  searchedUsersReducer: searchedUsersReducer,\n  signupReducer: signupReducer,\n  userReducer: userReducer\n});\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","export default (state = {\n  notifications: 0,\n  messages: 0\n}, action) => {\n  switch (action.type) {\n    case 'GET_BADGES':\n      return {\n        ...state,\n        notifications: action.notifications,\n        messages: action.messages\n      }\n    case 'SET_NOTIFICATIONS_READ':\n      return {\n        ...state,\n        notifications: 0\n      }\n    case 'SET_MESSAGES_BADGE_COUNT':\n      return {\n        ...state,\n        messages: action.messagesCount\n      }\n    default:\n      return state;\n  }\n}","export default (state = {\n  loggedIn: false\n}, action) => {\n  switch (action.type) {\n    case 'SET_LOGGED_IN':\n      return {\n        ...state,\n        loggedIn: action.loggedIn\n      };\n    default:\n      return state;\n  }\n}","export default (\n  state = {\n    username: '',\n    conversations: [],\n    openConversation: null\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"GET_CONVERSATIONS\":\n      return {\n        ...state,\n        username: action.username,\n        conversations: action.conversations\n      };\n    case \"SET_OPEN_CONVERSATION\":\n      return {\n        ...state,\n        openConversation: action.conversation\n      }\n    case 'ADD_MESSAGE_TO_CONVERSATION':\n      return {\n        ...state,\n        conversations: state.conversations.map(conversation => {\n          if (conversation.id === action.conversationId) {\n            return {\n              ...conversation,\n              messages: [...conversation.messages, action.message]\n            };\n          } else {\n            return conversation;\n          }\n        })\n      }\n    case 'ADD_CONVERSATION':\n      return {\n        ...state,\n        conversations: [...state.conversations, action.conversation]\n      }\n    case 'UPDATE_CONVERSATION':\n      return {\n        ...state,\n        conversations: [...state.conversations.map(conversation => {\n          if (conversation.id === action.conversation.id) {\n            return action.conversation;\n          } else {\n            return conversation;\n          }\n        })]\n      }\n    default:\n      return state;\n  }\n};\n","export default (state = {\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case 'GET_INTERESTS_POSTS':\n      return {\n        posts: action.posts\n      }\n    case 'UPDATE_INTERESTS_POSTS':\n      const updatePosts = [...state.posts]\n      if (action.post.is_news_story) {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (action.post.content === post.content && action.post.title === post.title) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      } else {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (post.id === action.post.id) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      }\n    default:\n      return state\n  }\n}","export default (state = {\n  interests: [],\n  newsSources: []\n}, action) => {\n  switch (action.type) {\n    case 'SET_INTERESTS_AND_NEWS_SOURCES':\n      return {\n        ...state,\n        interests: action.interests,\n        newsSources: action.newsSources\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","export default (state = {\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case 'GET_NEWS_SOURCES_POSTS':\n      return {\n        posts: action.posts\n      }\n    case 'UPDATE_NEWS_SOURCES_POSTS':\n      const updatePosts = [...state.posts]\n      if (action.post.is_news_story) {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (action.post.content === post.content && action.post.title === post.title) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      } else {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (post.id === action.post.id) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      }\n    default:\n      return state;\n  }\n}","export default (state = {\n  notifications: []\n}, action) => {\n  switch (action.type) {\n    case 'GET_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: action.notifications\n      }\n    case 'DELETE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [...state.notifications].filter(notification => notification.content !== action.notification_content)\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","export default (state = {\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case 'GET_POSTS':\n      return {\n        ...state,\n        posts: action.posts\n      };\n    case 'CREATE_NEW_POST':\n      const newPosts = [...state.posts]\n      newPosts.unshift(action.post)\n      return {\n        ...state,\n        posts: newPosts\n      }\n    case 'UPDATE_POSTS':\n      const updatePosts = [...state.posts]\n      if (action.post.is_news_story) {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (action.post.content === post.content && action.post.title === post.title) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      } else {\n        return {\n          ...state,\n          posts: updatePosts.map(post => {\n            if (post.id === action.post.id) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      }\n    default:\n      return state;\n  }\n}","export default (state = {\n  searchedUsers: []\n}, action) => {\n  switch (action.type) {\n    case 'GET_SEARCHED_USERS':\n      return {\n        ...state,\n        searchedUsers: action.searchedUsers\n      }\n    default:\n      return state\n  }\n}","export default (state = {\n  sources: [],\n  interests: [],\n  selectedSources: [],\n  selectedInterests: []\n}, action) => {\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return {\n        ...state,\n        sources: action.sources\n      }\n    case 'SET_INTERESTS':\n      return {\n        ...state,\n        interests: action.interests\n      }\n    case 'ADD_SOURCE':\n      return {\n        ...state,\n        selectedSources: [...state.selectedSources, action.source]\n      };\n    case 'REMOVE_SOURCE':\n      return {\n        ...state,\n        selectedSources: [...state.selectedSources].filter(source => source !== action.source)\n      };\n    case 'ADD_INTEREST':\n      return {\n        ...state,\n        selectedInterests: [...state.selectedInterests, action.interest]\n      };\n    case 'REMOVE_INTEREST':\n      return {\n        ...state,\n        selectedInterests: [...state.selectedInterests].filter(interest => interest !== action.interest)\n      };\n    default:\n      return state\n  }\n}","export default (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    case 'GET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    case 'UPDATE_FOLLOW':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          following: action.following\n        }\n      }\n    case 'UPDATE_USER_POSTS':\n      const updatePosts = [...state.user.posts];\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          posts: updatePosts.map(post => {\n            if (post.id === action.post.id) {\n              return action.post;\n            } else {\n              return post;\n            }\n          })\n        }\n      }\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}